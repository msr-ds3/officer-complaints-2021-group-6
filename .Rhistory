chicago_complaints_v1 <- read_csv('data/complaints-complainants_2000-2016_2016-11.csv')
View(chicago_complaints_v1)
View(chicago_complaints_v1)
View(chicago_complaints_v2)
library(tidyverse)
library(lubridate)
library(scales)
theme_set(theme_bw())
# chicago_accused <- read_csv('data/complaints-accused_2000-2018_2018-03.csv')
chicago_complaints_v2 <- read_csv('data/complaints-complaints_2000-2018_2018-03.csv')
chicago_complaints_v1 <- read_csv('data/complaints-complaints_2000-2016_2016-11.csv')
View(chicago_complaints_v1)
View(chicago_complaints_v2)
View(chicago_complaints_v2)
total_complaints <- inner_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
View(total_complaints)
total_complaints <- full_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
total_complaints <- full_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
filter(between(complaint_date, as.Date('2007-01-01'), as.Date('2017-12-31')))
total_complaints <- full_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
filter(between(complaint_date.x, as.Date('2007-01-01'), as.Date('2017-12-31')) | between(complaint_date.y, as.Date('2007-01-01'), as.Date('2017-12-31')))
total_complaints <- right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
filter(between(complaint_date.x, as.Date('2007-01-01'), as.Date('2017-12-31')) | between(complaint_date.y, as.Date('2007-01-01'), as.Date('2017-12-31')))
total_complaints <- right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
# chicago_accused <- read_csv('data/complaints-accused_2000-2018_2018-03.csv')
chicago_complaints_v2 <- read_csv('data/complaints-complaints_2000-2018_2018-03.csv') %>%
filter(between(complaint_date, as.Date('2007-01-01'), as.Date('2017-12-31')))
chicago_complaints_v1 <- read_csv('data/complaints-complaints_2000-2016_2016-11.csv') %>%
filter(between(complaint_date, as.Date('2007-01-01'), as.Date('2017-12-31')))
View(chicago_complaints_v1)
total_complaints <- full_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
total_complaints <- inner_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
total_complaints <- right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
total_complaints <- left_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
total_complaints <- full_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
chicago_complaints_v1 <- read_csv('data/complaints-complaints_2000-2016_2016-11.csv') %>%
filter(between(complaint_date, as.Date('2007-01-01'), as.Date('2017-12-31')), between(closed_date, as.Date('2007-01-01'), as.Date('2017-12-31')))
total_complaints <- full_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
chicago_officers <- read_csv('data/complaints-accused.csv')
officer_filed <- read_csv('data/officer-filed-complaints__2017-09.csv')
chicago_only_civilians <- chicago_officers %>% mutate(cr_id = as.numeric(cr_id)) %>%
anti_join(officer_filed, by = "cr_id")
joint_complaints <- inner_join(chicago_only_civilians, chicago_complaints_v1, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
View(joint_complaints)
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
chicago_only_civilians <- chicago_officers %>% mutate(cr_id = as.numeric(cr_id))
joint_complaints <- inner_join(chicago_only_civilians, chicago_complaints_v1, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
joint_complaints <- inner_join(chicago_only_civilians, chicago_complaints_v2, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
total_complaints = full_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
joint_complaints <- inner_join(chicago_only_civilians, total_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
total_complaints = inner_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
joint_complaints <- inner_join(chicago_only_civilians, total_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
joint_complaints <- inner_join(chicago_only_civilians, total_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
all_complaints <- read_csv('data/complaints-complaints.csv') %>%
filter(between(complaint_date, as.Date("2007-01-01"), as.Date("2017-12-31")), between(closed_date, as.Date("2007-01-01"), as.Date("2017-12-31")))
joint_complaints <- inner_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
View(all_complaints)
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
joint_complaints <- right_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
anti_join(officer_filed, by = "cr_id")
joint_complaints <- right_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
joint_complaints <- left_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
joint_complaints <- inner_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
chicago_complaints_v1 <- read_csv('data/complaints-complaints_2000-2016_2016-11.csv') %>%
filter(between(complaint_date, as.Date('2007-01-01'), as.Date('2017-12-31')))
joint_complaints <- inner_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
all_complaints <- read_csv('data/complaints-complaints.csv') %>%
filter(between(complaint_date, as.Date("2007-01-01"), as.Date("2017-12-31")))
joint_complaints <- inner_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
all_complaints <- read_csv('data/complaints-complaints.csv') %>%
filter(between(complaint_date, as.Date("2007-01-01"), as.Date("2017-12-31")), between(closed_date, as.Date("2007-01-01"), as.Date("2017-12-31")))
View(chicago_officers)
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
inner_join(officer_filed, by = "cr_id")
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
inner_join(officer_filed, by = "cr_id")
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
anti_join(officer_filed, by = "cr_id")
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") #%>%
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id") %>%
anti_join(officer_filed, by = "cr_id")
total_complaints = right_join(chicago_complaints_v1, chicago_complaints_v2, by = "cr_id")
View(officer_filed)
#test
filter(chicago_complaints_v2, cr_id == 1010592)
#test
filter(chicago_complaints_v2, cr_id %in% officer_filed$cr_id)
#test
filter(chicago_complaints_v2, cr_id %in% officer_filed$cr_id) %>% view
#test
filter(chicago_only_civilians, cr_id %in% officer_filed$cr_id) %>% view
chicago_only_civilians <- chicago_officers %>% mutate(cr_id = as.numeric(cr_id)) %>%
filter(!(cr_id %in% officer_filed$cr_id))
#test
filter(chicago_only_civilians, cr_id %in% officer_filed$cr_id) %>% view
joint_complaints <- inner_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
chicago_only_civilians <- chicago_officers %>% mutate(cr_id = as.numeric(cr_id)) %>%
filter(!(cr_id %in% officer_filed$cr_id))
joint_complaints <- inner_join(chicago_only_civilians, all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup() %>%
group_by(link_UID) %>%
summarize(num_complaints = n()) %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
#test
filter(chicago_only_civilians, cr_id %in% officer_filed$cr_id) %>% view
# plot the output
joint_complaints %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous(labels = percent)+
theme(legend.position = "none")
# plot the output
complaints_rank %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scaly_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none")
### Cleaning Chicago Data for Replication ######
##########  Importing Required libraries ######################
library(tidyverse)
########## Importing Required Datasets #######################
# contains data of accused officers
chicago_officers <- read_csv('data/complaints-accused.csv')
# contains all the closed complaints between 2007 and 2017
chicago_all_complaints <- read_csv('data/complaints-complaints.csv') %>%
filter(between(complaint_date, as.Date("2007-01-01"), as.Date("2017-12-31")), between(closed_date, as.Date("2007-01-01"), as.Date("2017-12-31")))
# contains complaints id filed by officers
chicago_officer_filed <- read_csv('data/officer-filed-complaints__2017-09.csv')
############# Data Cleaning ################################
# get the complaints filed by civilians only
chicago_only_civilians <- chicago_officers %>% mutate(cr_id = as.numeric(cr_id)) %>%
filter(!(cr_id %in% chicago_officer_filed$cr_id))
# join the complaints data by complaint id and group by to get distinct officer Id and complaint ID
chicago_joint_complaints <- inner_join(chicago_only_civilians, chicago_all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup()
# get the number of complaints per officer Id
chicago_complaints_per_officer <- chicago_joint_complaints %>%
group_by(link_UID) %>%
summarize(num_complaints = n())
# divide the complaints per officer into deciles
chicago_complaints_rank <- chicago_complaints_per_officer %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
## outputs complaints_rank that can be plotted into required bar graph
# plot the output
complaints_rank %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scaly_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none")
# plot the output
chicago_complaints_rank %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scaly_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none")
# plot the output
chicago_complaints_rank %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scale_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none")
# plot the output
chicago_complaints_rank %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scale_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none") +
labs(title = "Chicago Complaints Data")
### Cleaning Chicago Data for Replication ######
##########  Importing Required libraries ######################
library(tidyverse)
########## Importing Required Datasets #######################
# contains data of accused officers
chicago_officers <- read_csv('data/complaints-accused.csv')
# contains all the closed complaints between 2007 and 2017
chicago_all_complaints <- read_csv('data/complaints-complaints.csv') %>%
filter(between(complaint_date, as.Date("2007-01-01"), as.Date("2017-12-31")), between(closed_date, as.Date("2007-01-01"), as.Date("2017-12-31")))
# contains complaints id filed by officers
chicago_officer_filed <- read_csv('data/officer-filed-complaints__2017-09.csv')
############# Data Cleaning ################################
# get the complaints filed by civilians only
chicago_only_civilians <- chicago_officers %>% mutate(cr_id = as.numeric(cr_id)) %>%
filter(!(cr_id %in% chicago_officer_filed$cr_id))
# join the complaints data by complaint id and group by to get distinct officer Id and complaint ID
chicago_incidents <- inner_join(chicago_only_civilians, chicago_all_complaints, by = "cr_id") %>%
group_by(link_UID, cr_id) %>%
distinct() %>%
ungroup()
# get the number of complaints per officer Id
chicago_incidents <- chicago_incidents %>%
group_by(link_UID) %>%
summarize(num_complaints = n())
# divide the complaints per officer into deciles
chicago_incidents <- chicago_incidents %>%
mutate(decile_rank = ntile(num_complaints, 10)) %>%
group_by(decile_rank) %>%
summarize(total_complaints = sum(num_complaints))
## outputs complaints_incidents that can be plotted into required bar graph
# plot the output
chicago_incidents %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scale_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none") +
labs(title = "Chicago Complaints Data")
source('02_clean_nyc_data.R')
source('data_Wrangling/02_clean_nyc_data.R')
source('data_wrangling/02_clean_nyc_data.R')
source('data_wrangling/02_clean_nyc_data.R')
source('data_wrangling/05_clean_chicago_data.R')
source('data_wrangling/02_clean_nyc_data.R')
source('data_wrangling/05_clean_chicago_data.R')
source('data_wrangling/08_clean_philly_data.R')
source('data_wrangling/02_clean_nyc_data.R')
source('data_wrangling/05_clean_chicago_data.R')
source('data_wrangling/08_clean_philly_data.R')
nyc_incidents %>%
ggplot(aes(x = decile_rank, y = num_complaints_in_this_decile / sum(num_complaints_in_this_decile))) +
geom_bar(stat = "identity", aes(fill = decile_rank == 10)) +
theme(legend.position = "none") +
scale_x_continuous("Decile Rank", breaks = pretty_breaks(10)) +
scale_y_continuous("% of Complaints", labels = percent) +
labs(title = "NYC Graph")
# plot the output
chicago_incidents %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scale_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none") +
labs(title = "Chicago Complaints Data")
philly_incidents %>%
ggplot(aes(x = decile_rank, y = num_complaints_in_this_decile / sum(num_complaints_in_this_decile))) +
geom_bar(stat = "identity", aes(color = decile_rank == 10, fill = decile_rank == 10)) +
theme(legend.position = "none") +
scale_x_continuous("Decile Rank", breaks = pretty_breaks(10)) +
scale_y_continuous("% of Complaints", labels = percent, limits = c(0, 0.3))
source('data_wrangling/02_clean_nyc_data.R')
source('data_wrangling/05_clean_chicago_data.R')
source('data_wrangling/08_clean_philly_data.R')
nyc_incidents %>%
ggplot(aes(x = decile_rank, y = num_complaints_in_this_decile / sum(num_complaints_in_this_decile))) +
geom_bar(stat = "identity", aes(fill = decile_rank == 10)) +
theme(legend.position = "none") +
scale_x_continuous("Decile Rank", breaks = pretty_breaks(10)) +
scale_y_continuous("% of Complaints", labels = percent) +
labs(title = "NYC Complaints")
# plot the output
chicago_incidents %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scale_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none") +
labs(title = "Chicago Complaints")
philly_incidents %>%
ggplot(aes(x = decile_rank, y = num_complaints_in_this_decile / sum(num_complaints_in_this_decile))) +
geom_bar(stat = "identity", aes(color = decile_rank == 10, fill = decile_rank == 10)) +
theme(legend.position = "none") +
scale_x_continuous("Decile Rank", breaks = pretty_breaks(10)) +
scale_y_continuous("% of Complaints", labels = percent, limits = c(0, 0.3)) +
labs(title = "Philadelphia Complaints")
source('data_wrangling/02_clean_nyc_data.R')
source('data_wrangling/05_clean_chicago_data.R')
source('data_wrangling/08_clean_philly_data.R')
nyc_incidents %>%
ggplot(aes(x = decile_rank, y = num_complaints_in_this_decile / sum(num_complaints_in_this_decile))) +
geom_bar(stat = "identity", aes(fill = decile_rank == 10)) +
theme(legend.position = "none") +
scale_x_continuous("Decile Rank", breaks = pretty_breaks(10)) +
scale_y_continuous("% of Complaints", labels = percent) +
labs(title = "NYC Complaints")
# plot the output
chicago_incidents %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scale_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none") +
labs(title = "Chicago Complaints")
philly_incidents %>%
ggplot(aes(x = decile_rank, y = num_complaints_in_this_decile / sum(num_complaints_in_this_decile))) +
geom_bar(stat = "identity", aes(color = decile_rank == 10, fill = decile_rank == 10)) +
theme(legend.position = "none") +
scale_x_continuous("Decile Rank", breaks = pretty_breaks(10)) +
scale_y_continuous("% of Complaints", labels = percent, limits = c(0, 0.3)) +
labs(title = "Philadelphia Complaints")
source('data_wrangling/02_clean_nyc_data.R')
source('data_wrangling/05_clean_chicago_data.R')
source('data_wrangling/08_clean_philly_data.R')
nyc_incidents %>%
ggplot(aes(x = decile_rank, y = num_complaints_in_this_decile / sum(num_complaints_in_this_decile))) +
geom_bar(stat = "identity", aes(fill = decile_rank == 10)) +
theme(legend.position = "none") +
scale_x_continuous("Decile Rank", breaks = pretty_breaks(10)) +
scale_y_continuous("% of Complaints", labels = percent) +
labs(title = "NYC Complaints")
# plot the output
chicago_incidents %>%
ggplot(aes(x = decile_rank, y = total_complaints/sum(total_complaints))) +
geom_bar(stat = 'identity', aes(fill = decile_rank == 10)) +
scale_y_continuous("% of complaints", labels = percent) +
scale_x_continuous("Decile Rank", breaks = 1:10) +
theme(legend.position = "none") +
labs(title = "Chicago Complaints")
philly_incidents %>%
ggplot(aes(x = decile_rank, y = num_complaints_in_this_decile / sum(num_complaints_in_this_decile))) +
geom_bar(stat = "identity", aes(color = decile_rank == 10, fill = decile_rank == 10)) +
theme(legend.position = "none") +
scale_x_continuous("Decile Rank", breaks = pretty_breaks(10)) +
scale_y_continuous("% of Complaints", labels = percent, limits = c(0, 0.3)) +
labs(title = "Philadelphia Complaints")
unlink("Replication/complaint_graphs_cache", recursive = TRUE)
